using System;
using SqlToLinq.Core.Extensions;

namespace SqlToLinq.Core.Common.Models
{
    public class ExecutionResult
    {
        public QueryType QueryType { get; private set; }

        public dynamic Result { get; init; }
        public string SqlQuery { get; init; }
        public TimeSpan ExecutionTime { get; init; }

        public ExecutionResult(dynamic result, string sqlQuery, TimeSpan executionTime)
        {
            Result = result;
            SqlQuery = sqlQuery;
            ExecutionTime = executionTime;
        }

        public void SetQueryType(QueryType queryType) => QueryType = queryType;


        public override string ToString()
        {
            var isSqlQuery = QueryType == QueryType.Sql;

            var rowsCount = isSqlQuery ? Result.Rows.Count : Result.Count;

            var header = $"[Query type: {QueryType.ToString().SplitCamelCase()}\t\tRows Count: {rowsCount}\t\tExecution time: {ExecutionTime:g}]";
            
            var sqlDescription = isSqlQuery ? "SQL Query:" : "SQL Query Generated By Entity Framework:";

            var result = $"--{header}\r\n\r\n--{sqlDescription}\r\n{SqlQuery}\r\n\r\n";

            return result;
        }
    }
}